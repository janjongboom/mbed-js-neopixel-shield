/* Generated by https://github.com/janjongboom/mbed-js-wrapper-generator */

#include "jerryscript-mbed-util/logging.h"
#include "jerryscript-mbed-library-registry/wrap_tools.h"

#include "BlinkyShield.h"

/**
 * NeopixelShield#WipeColor (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, WipeColor) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, WipeColor, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, WipeColor, 0, number, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, WipeColor, 1, number, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);

        double jArg0 = jerry_get_number_value(args[0]);
        uint32_t arg0 = static_cast<uint32_t>(jArg0);
        double jArg1 = jerry_get_number_value(args[1]);
        uint8_t arg1 = static_cast<uint8_t>(jArg1);

        native_ptr->WipeColor(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#Red (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, Red) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, Red, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Red, 0, number, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Red, 1, number, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);

        double jArg0 = jerry_get_number_value(args[0]);
        uint8_t arg0 = static_cast<uint8_t>(jArg0);
        double jArg1 = jerry_get_number_value(args[1]);
        uint8_t arg1 = static_cast<uint8_t>(jArg1);

        native_ptr->Red(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#Green (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, Green) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, Green, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Green, 0, number, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Green, 1, number, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);

        double jArg0 = jerry_get_number_value(args[0]);
        uint8_t arg0 = static_cast<uint8_t>(jArg0);
        double jArg1 = jerry_get_number_value(args[1]);
        uint8_t arg1 = static_cast<uint8_t>(jArg1);

        native_ptr->Green(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#Blue (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, Blue) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, Blue, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Blue, 0, number, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, Blue, 1, number, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);

        double jArg0 = jerry_get_number_value(args[0]);
        uint8_t arg0 = static_cast<uint8_t>(jArg0);
        double jArg1 = jerry_get_number_value(args[1]);
        uint8_t arg1 = static_cast<uint8_t>(jArg1);

        native_ptr->Blue(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#SetPixel (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, SetPixel) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, SetPixel, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, SetPixel, 0, number, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(NeopixelShield, SetPixel, 1, number, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);

        double jArg0 = jerry_get_number_value(args[0]);
        uint8_t arg0 = static_cast<uint8_t>(jArg0);
        double jArg1 = jerry_get_number_value(args[1]);
        uint32_t arg1 = static_cast<uint32_t>(jArg1);

        native_ptr->SetPixel(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#Flush (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, Flush) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, Flush, (args_count == 0));

    if (args_count == 0) {


        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);



        native_ptr->Flush();
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#Off (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(NeopixelShield, Off) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, Off, (args_count == 0));

    if (args_count == 0) {


        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        BlinkyShield* native_ptr = reinterpret_cast<BlinkyShield*>(ptr_val);



        native_ptr->Off();
        return jerry_create_undefined();
    }
}

/**
 * NeopixelShield#destructor
 *
 * Called if/when the NeopixelShield is GC'ed.
 */
void NAME_FOR_CLASS_NATIVE_DESTRUCTOR(NeopixelShield)(const uintptr_t native_handle) {
    delete reinterpret_cast<BlinkyShield*>(native_handle);
}


/**
 * mbed_js_wrap_native_object (turns a native NeopixelShield object into a JS object)
 */
jerry_value_t mbed_js_wrap_native_object(BlinkyShield* ptr) {
    uintptr_t native_ptr = (uintptr_t) ptr;

    jerry_value_t js_object = jerry_create_object();
    jerry_set_object_native_handle(js_object, native_ptr, NAME_FOR_CLASS_NATIVE_DESTRUCTOR(NeopixelShield));

    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, WipeColor);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, Red);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, Green);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, Blue);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, SetPixel);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, Flush);
    ATTACH_CLASS_FUNCTION(js_object, NeopixelShield, Off);

    return js_object;
}

/**
 * NeopixelShield (native JavaScript constructor)
 */
DECLARE_CLASS_CONSTRUCTOR(NeopixelShield) {
    CHECK_ARGUMENT_COUNT(NeopixelShield, __constructor, (args_count == 0));

    if (args_count == 0) {




        // Create the native object
        BlinkyShield* native_obj = new BlinkyShield();

        return mbed_js_wrap_native_object(native_obj);
    }
}

void mbed_js_NeopixelShield_setup() {

}
